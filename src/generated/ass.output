Terminals unused in grammar

    T_WHITESPACE
    T_UNKNOWN_CMD


Rules useless in parser due to conflicts

    0 $accept: page $end


Grammar

    0 $accept: page $end

    1 endline: T_M_COMMENT
    2        | T_S_COMMENT T_LINE
    3        | T_S_COMMENT $end
    4        | T_DM_COMMENT
    5        | T_DS_COMMENT T_LINE
    6        | T_DS_COMMENT $end
    7        | T_LINE
    8        | $end

    9 param_args: T_IDENTIFIER
   10           | param_args T_IDENTIFIER
   11           | param_args T_INTEGER
   12           | param_args T_STRING
   13           | param_args T_BIT_LIT
   14           | param_args T_BIT_CONSTANT

   15 param: T_PARAM param_args endline

   16 constant: T_CONSTANT T_IDENTIFIER T_BIT_LIT endline
   17         | T_CONSTANT T_IDENTIFIER T_INTEGER endline

   18 enum: T_ENUM T_IDENTIFIER T_INTEGER endline

   19 pattern: T_PATTERN T_IDENTIFIER T_STRING T_BIT_CONSTANT endline
   20        | T_PATTERN T_IDENTIFIER T_STRING T_BIT_LIT endline

   21 order_args: T_INTEGER
   22           | order_args T_INTEGER

   23 order: T_ORDER T_IDENTIFIER order_args endline

   24 opcode: T_OPCODE T_IDENTIFIER T_STRING T_BIT_LIT endline
   25       | T_OPCODE T_IDENTIFIER T_STRING T_CONSTANT endline
   26       | T_OPCODE T_IDENTIFIER T_STRING endline

   27 expr: T_LEFTPAR T_INTEGER T_RIGHPAR
   28     | T_LEFTPAR T_RIGHPAR

   29 subst: T_SUBST expr

   30 format: T_FORMAT T_IDENTIFIER bit_pattern endline

   31 bit_pattern: T_LEFTSQBRACK bit_pattern_args T_RIGHSQBRACK

   32 bit_pattern_args: bit_elem
   33                 | bit_pattern_args T_COMMA bit_elem

   34 bit_elem: T_BIT_LIT
   35         | T_BIT_CONSTANT
   36         | subst
   37         | T_IDENTIFIER
   38         | T_ELIPSIS

   39 command: param
   40        | constant
   41        | enum
   42        | pattern
   43        | order
   44        | opcode
   45        | format

   46 page: %empty
   47     | page command
   48     | page endline


Terminals, with rules where they appear

    $end (0) 0 3 6 8
    error (256)
    T_LINE (258) 2 5 7
    T_WHITESPACE (259)
    T_S_COMMENT (260) 2 3
    T_M_COMMENT (261) 1
    T_DS_COMMENT (262) 5 6
    T_DM_COMMENT (263) 4
    T_PARAM (264) 15
    T_CONSTANT (265) 16 17 25
    T_ENUM (266) 18
    T_PATTERN (267) 19 20
    T_ORDER (268) 23
    T_OPCODE (269) 24 25 26
    T_FORMAT (270) 30
    T_UNKNOWN_CMD (271)
    T_INTEGER <dVal> (272) 11 17 18 21 22 27
    T_BIT_CONSTANT <dVal> (273) 14 19 35
    T_BIT_LIT <dVal> (274) 13 16 20 24 34
    T_STRING <dVal> (275) 12 19 20 24 25 26
    T_IDENTIFIER <dVal> (276) 9 10 16 17 18 19 20 23 24 25 26 30 37
    T_SUBST <dVal> (277) 29
    T_LEFTPAR (278) 27 28
    T_RIGHPAR (279) 27 28
    T_LEFTSQBRACK (280) 31
    T_RIGHSQBRACK (281) 31
    T_ELIPSIS (282) 38
    T_COMMA (283) 33


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    endline (30)
        on left: 1 2 3 4 5 6 7 8
        on right: 15 16 17 18 19 20 23 24 25 26 30 48
    param_args <lVal> (31)
        on left: 9 10 11 12 13 14
        on right: 10 11 12 13 14 15
    param (32)
        on left: 15
        on right: 39
    constant (33)
        on left: 16 17
        on right: 40
    enum (34)
        on left: 18
        on right: 41
    pattern (35)
        on left: 19 20
        on right: 42
    order_args (36)
        on left: 21 22
        on right: 22 23
    order (37)
        on left: 23
        on right: 43
    opcode (38)
        on left: 24 25 26
        on right: 44
    expr (39)
        on left: 27 28
        on right: 29
    subst (40)
        on left: 29
        on right: 36
    format (41)
        on left: 30
        on right: 45
    bit_pattern (42)
        on left: 31
        on right: 30
    bit_pattern_args (43)
        on left: 32 33
        on right: 31 33
    bit_elem (44)
        on left: 34 35 36 37 38
        on right: 32 33
    command (45)
        on left: 39 40 41 42 43 44 45
        on right: 47
    page (46)
        on left: 46 47 48
        on right: 0 47 48


State 0

    0 $accept: • page $end

    $default  reduce using rule 46 (page)

    page  go to state 1


State 1

    0 $accept: page • $end
   47 page: page • command
   48     | page • endline

    $end          shift, and go to state 2
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7
    T_PARAM       shift, and go to state 8
    T_CONSTANT    shift, and go to state 9
    T_ENUM        shift, and go to state 10
    T_PATTERN     shift, and go to state 11
    T_ORDER       shift, and go to state 12
    T_OPCODE      shift, and go to state 13
    T_FORMAT      shift, and go to state 14

    endline   go to state 15
    param     go to state 16
    constant  go to state 17
    enum      go to state 18
    pattern   go to state 19
    order     go to state 20
    opcode    go to state 21
    format    go to state 22
    command   go to state 23


State 2

    0 $accept: page $end •
    8 endline: $end •

    $default  reduce using rule 8 (endline)


State 3

    7 endline: T_LINE •

    $default  reduce using rule 7 (endline)


State 4

    2 endline: T_S_COMMENT • T_LINE
    3        | T_S_COMMENT • $end

    $end    shift, and go to state 24
    T_LINE  shift, and go to state 25


State 5

    1 endline: T_M_COMMENT •

    $default  reduce using rule 1 (endline)


State 6

    5 endline: T_DS_COMMENT • T_LINE
    6        | T_DS_COMMENT • $end

    $end    shift, and go to state 26
    T_LINE  shift, and go to state 27


State 7

    4 endline: T_DM_COMMENT •

    $default  reduce using rule 4 (endline)


State 8

   15 param: T_PARAM • param_args endline

    T_IDENTIFIER  shift, and go to state 28

    param_args  go to state 29


State 9

   16 constant: T_CONSTANT • T_IDENTIFIER T_BIT_LIT endline
   17         | T_CONSTANT • T_IDENTIFIER T_INTEGER endline

    T_IDENTIFIER  shift, and go to state 30


State 10

   18 enum: T_ENUM • T_IDENTIFIER T_INTEGER endline

    T_IDENTIFIER  shift, and go to state 31


State 11

   19 pattern: T_PATTERN • T_IDENTIFIER T_STRING T_BIT_CONSTANT endline
   20        | T_PATTERN • T_IDENTIFIER T_STRING T_BIT_LIT endline

    T_IDENTIFIER  shift, and go to state 32


State 12

   23 order: T_ORDER • T_IDENTIFIER order_args endline

    T_IDENTIFIER  shift, and go to state 33


State 13

   24 opcode: T_OPCODE • T_IDENTIFIER T_STRING T_BIT_LIT endline
   25       | T_OPCODE • T_IDENTIFIER T_STRING T_CONSTANT endline
   26       | T_OPCODE • T_IDENTIFIER T_STRING endline

    T_IDENTIFIER  shift, and go to state 34


State 14

   30 format: T_FORMAT • T_IDENTIFIER bit_pattern endline

    T_IDENTIFIER  shift, and go to state 35


State 15

   48 page: page endline •

    $default  reduce using rule 48 (page)


State 16

   39 command: param •

    $default  reduce using rule 39 (command)


State 17

   40 command: constant •

    $default  reduce using rule 40 (command)


State 18

   41 command: enum •

    $default  reduce using rule 41 (command)


State 19

   42 command: pattern •

    $default  reduce using rule 42 (command)


State 20

   43 command: order •

    $default  reduce using rule 43 (command)


State 21

   44 command: opcode •

    $default  reduce using rule 44 (command)


State 22

   45 command: format •

    $default  reduce using rule 45 (command)


State 23

   47 page: page command •

    $default  reduce using rule 47 (page)


State 24

    3 endline: T_S_COMMENT $end •

    $default  reduce using rule 3 (endline)


State 25

    2 endline: T_S_COMMENT T_LINE •

    $default  reduce using rule 2 (endline)


State 26

    6 endline: T_DS_COMMENT $end •

    $default  reduce using rule 6 (endline)


State 27

    5 endline: T_DS_COMMENT T_LINE •

    $default  reduce using rule 5 (endline)


State 28

    9 param_args: T_IDENTIFIER •

    $default  reduce using rule 9 (param_args)


State 29

   10 param_args: param_args • T_IDENTIFIER
   11           | param_args • T_INTEGER
   12           | param_args • T_STRING
   13           | param_args • T_BIT_LIT
   14           | param_args • T_BIT_CONSTANT
   15 param: T_PARAM param_args • endline

    $end            shift, and go to state 36
    T_LINE          shift, and go to state 3
    T_S_COMMENT     shift, and go to state 4
    T_M_COMMENT     shift, and go to state 5
    T_DS_COMMENT    shift, and go to state 6
    T_DM_COMMENT    shift, and go to state 7
    T_INTEGER       shift, and go to state 37
    T_BIT_CONSTANT  shift, and go to state 38
    T_BIT_LIT       shift, and go to state 39
    T_STRING        shift, and go to state 40
    T_IDENTIFIER    shift, and go to state 41

    endline  go to state 42


State 30

   16 constant: T_CONSTANT T_IDENTIFIER • T_BIT_LIT endline
   17         | T_CONSTANT T_IDENTIFIER • T_INTEGER endline

    T_INTEGER  shift, and go to state 43
    T_BIT_LIT  shift, and go to state 44


State 31

   18 enum: T_ENUM T_IDENTIFIER • T_INTEGER endline

    T_INTEGER  shift, and go to state 45


State 32

   19 pattern: T_PATTERN T_IDENTIFIER • T_STRING T_BIT_CONSTANT endline
   20        | T_PATTERN T_IDENTIFIER • T_STRING T_BIT_LIT endline

    T_STRING  shift, and go to state 46


State 33

   23 order: T_ORDER T_IDENTIFIER • order_args endline

    T_INTEGER  shift, and go to state 47

    order_args  go to state 48


State 34

   24 opcode: T_OPCODE T_IDENTIFIER • T_STRING T_BIT_LIT endline
   25       | T_OPCODE T_IDENTIFIER • T_STRING T_CONSTANT endline
   26       | T_OPCODE T_IDENTIFIER • T_STRING endline

    T_STRING  shift, and go to state 49


State 35

   30 format: T_FORMAT T_IDENTIFIER • bit_pattern endline

    T_LEFTSQBRACK  shift, and go to state 50

    bit_pattern  go to state 51


State 36

    8 endline: $end •

    $default  reduce using rule 8 (endline)


State 37

   11 param_args: param_args T_INTEGER •

    $default  reduce using rule 11 (param_args)


State 38

   14 param_args: param_args T_BIT_CONSTANT •

    $default  reduce using rule 14 (param_args)


State 39

   13 param_args: param_args T_BIT_LIT •

    $default  reduce using rule 13 (param_args)


State 40

   12 param_args: param_args T_STRING •

    $default  reduce using rule 12 (param_args)


State 41

   10 param_args: param_args T_IDENTIFIER •

    $default  reduce using rule 10 (param_args)


State 42

   15 param: T_PARAM param_args endline •

    $default  reduce using rule 15 (param)


State 43

   17 constant: T_CONSTANT T_IDENTIFIER T_INTEGER • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 52


State 44

   16 constant: T_CONSTANT T_IDENTIFIER T_BIT_LIT • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 53


State 45

   18 enum: T_ENUM T_IDENTIFIER T_INTEGER • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 54


State 46

   19 pattern: T_PATTERN T_IDENTIFIER T_STRING • T_BIT_CONSTANT endline
   20        | T_PATTERN T_IDENTIFIER T_STRING • T_BIT_LIT endline

    T_BIT_CONSTANT  shift, and go to state 55
    T_BIT_LIT       shift, and go to state 56


State 47

   21 order_args: T_INTEGER •

    $default  reduce using rule 21 (order_args)


State 48

   22 order_args: order_args • T_INTEGER
   23 order: T_ORDER T_IDENTIFIER order_args • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7
    T_INTEGER     shift, and go to state 57

    endline  go to state 58


State 49

   24 opcode: T_OPCODE T_IDENTIFIER T_STRING • T_BIT_LIT endline
   25       | T_OPCODE T_IDENTIFIER T_STRING • T_CONSTANT endline
   26       | T_OPCODE T_IDENTIFIER T_STRING • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7
    T_CONSTANT    shift, and go to state 59
    T_BIT_LIT     shift, and go to state 60

    endline  go to state 61


State 50

   31 bit_pattern: T_LEFTSQBRACK • bit_pattern_args T_RIGHSQBRACK

    T_BIT_CONSTANT  shift, and go to state 62
    T_BIT_LIT       shift, and go to state 63
    T_IDENTIFIER    shift, and go to state 64
    T_SUBST         shift, and go to state 65
    T_ELIPSIS       shift, and go to state 66

    subst             go to state 67
    bit_pattern_args  go to state 68
    bit_elem          go to state 69


State 51

   30 format: T_FORMAT T_IDENTIFIER bit_pattern • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 70


State 52

   17 constant: T_CONSTANT T_IDENTIFIER T_INTEGER endline •

    $default  reduce using rule 17 (constant)


State 53

   16 constant: T_CONSTANT T_IDENTIFIER T_BIT_LIT endline •

    $default  reduce using rule 16 (constant)


State 54

   18 enum: T_ENUM T_IDENTIFIER T_INTEGER endline •

    $default  reduce using rule 18 (enum)


State 55

   19 pattern: T_PATTERN T_IDENTIFIER T_STRING T_BIT_CONSTANT • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 71


State 56

   20 pattern: T_PATTERN T_IDENTIFIER T_STRING T_BIT_LIT • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 72


State 57

   22 order_args: order_args T_INTEGER •

    $default  reduce using rule 22 (order_args)


State 58

   23 order: T_ORDER T_IDENTIFIER order_args endline •

    $default  reduce using rule 23 (order)


State 59

   25 opcode: T_OPCODE T_IDENTIFIER T_STRING T_CONSTANT • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 73


State 60

   24 opcode: T_OPCODE T_IDENTIFIER T_STRING T_BIT_LIT • endline

    $end          shift, and go to state 36
    T_LINE        shift, and go to state 3
    T_S_COMMENT   shift, and go to state 4
    T_M_COMMENT   shift, and go to state 5
    T_DS_COMMENT  shift, and go to state 6
    T_DM_COMMENT  shift, and go to state 7

    endline  go to state 74


State 61

   26 opcode: T_OPCODE T_IDENTIFIER T_STRING endline •

    $default  reduce using rule 26 (opcode)


State 62

   35 bit_elem: T_BIT_CONSTANT •

    $default  reduce using rule 35 (bit_elem)


State 63

   34 bit_elem: T_BIT_LIT •

    $default  reduce using rule 34 (bit_elem)


State 64

   37 bit_elem: T_IDENTIFIER •

    $default  reduce using rule 37 (bit_elem)


State 65

   29 subst: T_SUBST • expr

    T_LEFTPAR  shift, and go to state 75

    expr  go to state 76


State 66

   38 bit_elem: T_ELIPSIS •

    $default  reduce using rule 38 (bit_elem)


State 67

   36 bit_elem: subst •

    $default  reduce using rule 36 (bit_elem)


State 68

   31 bit_pattern: T_LEFTSQBRACK bit_pattern_args • T_RIGHSQBRACK
   33 bit_pattern_args: bit_pattern_args • T_COMMA bit_elem

    T_RIGHSQBRACK  shift, and go to state 77
    T_COMMA        shift, and go to state 78


State 69

   32 bit_pattern_args: bit_elem •

    $default  reduce using rule 32 (bit_pattern_args)


State 70

   30 format: T_FORMAT T_IDENTIFIER bit_pattern endline •

    $default  reduce using rule 30 (format)


State 71

   19 pattern: T_PATTERN T_IDENTIFIER T_STRING T_BIT_CONSTANT endline •

    $default  reduce using rule 19 (pattern)


State 72

   20 pattern: T_PATTERN T_IDENTIFIER T_STRING T_BIT_LIT endline •

    $default  reduce using rule 20 (pattern)


State 73

   25 opcode: T_OPCODE T_IDENTIFIER T_STRING T_CONSTANT endline •

    $default  reduce using rule 25 (opcode)


State 74

   24 opcode: T_OPCODE T_IDENTIFIER T_STRING T_BIT_LIT endline •

    $default  reduce using rule 24 (opcode)


State 75

   27 expr: T_LEFTPAR • T_INTEGER T_RIGHPAR
   28     | T_LEFTPAR • T_RIGHPAR

    T_INTEGER  shift, and go to state 79
    T_RIGHPAR  shift, and go to state 80


State 76

   29 subst: T_SUBST expr •

    $default  reduce using rule 29 (subst)


State 77

   31 bit_pattern: T_LEFTSQBRACK bit_pattern_args T_RIGHSQBRACK •

    $default  reduce using rule 31 (bit_pattern)


State 78

   33 bit_pattern_args: bit_pattern_args T_COMMA • bit_elem

    T_BIT_CONSTANT  shift, and go to state 62
    T_BIT_LIT       shift, and go to state 63
    T_IDENTIFIER    shift, and go to state 64
    T_SUBST         shift, and go to state 65
    T_ELIPSIS       shift, and go to state 66

    subst     go to state 67
    bit_elem  go to state 81


State 79

   27 expr: T_LEFTPAR T_INTEGER • T_RIGHPAR

    T_RIGHPAR  shift, and go to state 82


State 80

   28 expr: T_LEFTPAR T_RIGHPAR •

    $default  reduce using rule 28 (expr)


State 81

   33 bit_pattern_args: bit_pattern_args T_COMMA bit_elem •

    $default  reduce using rule 33 (bit_pattern_args)


State 82

   27 expr: T_LEFTPAR T_INTEGER T_RIGHPAR •

    $default  reduce using rule 27 (expr)
